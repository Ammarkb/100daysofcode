#include <iostream> 
#include <vector> 
using namespace std;  
struct Node 
{ 
	int key; 
	struct Node *left, *right; 
}; 
Node * newNode(int k) 
{ 
	Node *temp = new Node; 
	temp->key = k; 
	temp->left = temp->right = NULL; 
	return temp; 
}
bool findPath(Node *root, vector<int> &path, int k) 
{ 
	
	if (root == NULL) return false; 

	path.push_back(root->key); 

	if (root->key == k) 
		return true; 

	if ( (root->left && findPath(root->left, path, k)) || 
		(root->right && findPath(root->right, path, k)) ) 
		return true; 
 
	path.pop_back(); 
	return false; 
} 


int findLCA(Node *root, int n1, int n2) 
{ 
	vector<int> path1, path2; 

	if ( !findPath(root, path1, n1) || !findPath(root, path2, n2)) 
		return -1; 

	int i; 
	for (i = 0; i < path1.size() && i < path2.size() ; i++) 
		if (path1[i] != path2[i]) 
			break; 
	return path1[i-1]; 
} 

int main() 
{  
	Node * root = newNode(1); 
	root->left = newNode(2); 
	root->right = newNode(3); 
	root->left->left = newNode(4); 
	root->left->right = newNode(5); 
	root->right->left = newNode(6); 
	root->right->right = newNode(7);
	root->left->left->left = newNode(8);
	root->left->left->right = newNode(9);
	root->left->right->left = newNode(10);
	root->right->left->right = newNode(11);
	root->right->right->left = newNode(12);
	root->right->right->right = newNode(13);
	int n1,n2;
  cout<<"Enter the values of two nodes: ";
	cin>>n1>>n2;
	cout <<"Lowest common ancestor is : "<<findLCA(root, n1, n2);  
	return 0; 
}
                 OUTPUT
  Enter the two values : 6 7
  Lowest common ancestor is : 3
